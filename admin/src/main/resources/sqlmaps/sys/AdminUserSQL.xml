<?xml version="1.0" encoding="UTF-8"?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baoke.admin.sys.dao.AdminUserDao">
<resultMap id="AdminUser"    type="com.baoke.admin.sys.domain.AdminUser">
	<result  property="id"  column="id"/>
	<result  property="userName"  column="user_name"/>
	<result  property="password"  column="password"/>
	<result  property="createdBy"  column="created_by"/>
	<result  property="updatedBy"  column="updated_by"/>
	<result  property="roleId"  column="role_id"/>
	<result  property="lastLoginIp"  column="last_login_ip"/>
	<result  property="status"  column="status"/>
	<result  property="lastLoginTime"  column="last_login_time"/>
	<result  property="gmtCreate"  column="gmt_create"/>
	<result  property="gmtModified"  column="gmt_modified"/>
</resultMap>


<insert id="addAdminUser"  parameterType="java.util.HashMap" keyColumn="id"  keyProperty="id" useGeneratedKeys="true">
INSERT INTO admin_user ( 
	user_name,
	password,
	created_by,
	updated_by,
	role_id,
	last_login_ip,
	status,
	last_login_time,
	gmt_create,
	gmt_modified
) VALUES (
	#{userName},
	#{password},
	#{createdBy},
	#{updatedBy},
	#{roleId},
	#{lastLoginIp},
	#{status},
	#{lastLoginTime},
	now(),
	now()
)
</insert>


<update id="updateAdminUser"  parameterType="java.util.HashMap">
update admin_user
 	set 
	<if test="userName != null">
		user_name=#{userName},
	</if>
	<if test="password != null">
		password=#{password},
	</if>
	<if test="updatedBy != null">
		updated_by=#{updatedBy},
	</if>
	<if test="roleId != null">
		role_id=#{roleId},
	</if>
	<if test="lastLoginIp != null">
		last_login_ip=#{lastLoginIp},
	</if>
	<if test="status != null">
		status=#{status},
	</if>
	<if test="lastLoginTime != null">
		last_login_time=#{lastLoginTime},
	</if>
		gmt_modified=now()
	where id=#{id}
</update>


<select id="countAdminUserByCondition"  parameterType="java.util.HashMap" resultType="java.lang.Integer">
	 select count(1) from admin_user
	 where 1=1
	 <if test="id != null">
		and id=#{id}
	 </if>
	 <if test="userName != null">
		and user_name=#{userName}
	 </if>
	 <if test="password != null">
		and password=#{password}
	 </if>
	 <if test="createdBy != null">
		and created_by=#{createdBy}
	 </if>
	 <if test="updatedBy != null">
		and updated_by=#{updatedBy}
	 </if>
	 <if test="roleId != null">
		and role_id=#{roleId}
	 </if>
	 <if test="lastLoginIp != null">
		and last_login_ip=#{lastLoginIp}
	 </if>
	 <if test="status != null">
		and status=#{status}
	 </if>
	 <if test="lastLoginTime != null">
		and last_login_time=#{lastLoginTime}
	 </if>
	 <if test="gmtCreate != null">
		and gmt_create=#{gmtCreate}
	 </if>
	 <if test="gmtModified != null">
		and gmt_modified=#{gmtModified}
	 </if>
	 <if test="grade != null">
		and grade=#{grade}
	 </if>
</select>


<select id="getAdminUserByCondition"  parameterType="java.util.HashMap" resultMap="AdminUser">
select id
		,user_name
		,password
		,created_by
		,updated_by
		,role_id
		,last_login_ip
		,status
		,last_login_time
		,gmt_create
		,gmt_modified
from admin_user
	where 1=1
	  <if test="id != null">
		and id=#{id}
	 </if>
	 <if test="userName != null">
		and user_name=#{userName}
	 </if>
	 <if test="password != null">
		and password=#{password}
	 </if>
	 <if test="createdBy != null">
		and created_by=#{createdBy}
	 </if>
	 <if test="updatedBy != null">
		and updated_by=#{updatedBy}
	 </if>
	 <if test="roleId != null">
		and role_id=#{roleId}
	 </if>
	 <if test="lastLoginIp != null">
		and last_login_ip=#{lastLoginIp}
	 </if>
	 <if test="status != null">
		and status=#{status}
	 </if>
	 <if test="lastLoginTime != null">
		and last_login_time=#{lastLoginTime}
	 </if>
	 <if test="gmtCreate != null">
		and gmt_create=#{gmtCreate}
	 </if>
	 <if test="gmtModified != null">
		and gmt_modified=#{gmtModified}
	 </if>
	 <if test="grade != null">
		and grade=#{grade}
	 </if>
	 <if test="sidx != null">
	order by ${sidx} ${sord}
	 </if>
		<if test="start != null">
		limit #{start}, #{end}
		</if>
</select>

<select id="getAdminUserById"  parameterType="java.lang.Long" resultMap="AdminUser">
	select id
			,user_name
			,password
			,created_by
			,updated_by
			,role_id
			,last_login_ip
			,status
			,last_login_time
			,gmt_create
			,gmt_modified
	from admin_user where id=#{id}
</select>

<select id="getAdminUserByName"  parameterType="java.lang.String" resultMap="AdminUser">
	select id
			,user_name
			,password
			,created_by
			,updated_by
			,role_id
			,last_login_ip
			,status
			,last_login_time
			,gmt_create
			,gmt_modified
	from admin_user where user_name=#{userName}
</select>

</mapper>