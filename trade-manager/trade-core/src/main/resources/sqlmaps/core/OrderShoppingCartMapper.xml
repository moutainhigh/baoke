<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.baoke.trade.dao.OrderShoppingCartDao">

	<resultMap id="BaseResultMap" type="com.baoke.trade.domain.OrderShoppingCart">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="user_id" property="userId" jdbcType="BIGINT" />
		<result column="item_id" property="itemId" jdbcType="BIGINT" />
		<result column="item_detail_id" property="itemDetailId"
			jdbcType="BIGINT" />
		<result column="num" property="num" jdbcType="INTEGER" />
		<result column="total_price" property="totalPrice" jdbcType="INTEGER" />
		<result column="price" property="price" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>

	<sql id="Base_Column_List">
		id,
		user_id,
		item_id,
		item_detail_id,
		num,
		total_price,
		price,
		create_time,
		update_time
	</sql>

	<select id="queryShoppingCartByUserId" parameterType="long"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		order_shopping_cart WHERE user_id = #{userId}
	</select>

	<select id="queryShoppingCartById" parameterType="long"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM
		order_shopping_cart WHERE id = #{id}
	</select>

	<select id="queryShoppingCart" parameterType="com.baoke.trade.domain.OrderShoppingCart"
		resultMap="BaseResultMap">
		SELECT
		<include refid="Base_Column_List" />
		FROM order_shopping_cart WHERE 1 = 1
		<if test="userId != null">AND user_id = #{userId}</if>
		<if test="itemId != null">AND item_id = #{itemId}</if>
		<if test="itemDetailId != null">AND item_detail_id = #{itemDetailId}</if>
		LIMIT 1
	</select>

	<insert id="addShoppingCart" parameterType="com.baoke.trade.domain.OrderShoppingCart" keyProperty="id" useGeneratedKeys="true">
	
		insert into order_shopping_cart
		(
		id,
		user_id,
		item_id,
		item_detail_id,
		num,
		total_price,
		price,
		create_time,
		update_time
		)
		values
		(
		#{id},
		#{userId},
		#{itemId},
		#{itemDetailId},
		#{num},
		#{totalPrice},
		#{price},
		now(),
		now()
		)
	</insert>

	<delete id="deleteShoppingCart" parameterType="long">
		DELETE FROM order_shopping_cart WHERE id = #{id} and user_id=#{userId} 
	</delete>

	<delete id="deleteShoppingCartByUserIdAndItemId" parameterType="com.baoke.trade.domain.OrderShoppingCart">
		DELETE FROM order_shopping_cart WHERE
		user_id = #{userId}
		and item_id = #{itemId}
		and item_detail_id = #{itemDetailId}
	</delete>

	<update id="modifyShoppingCart" parameterType="com.baoke.trade.domain.OrderShoppingCart">
		UPDATE order_shopping_cart
		SET num = #{num},
		total_price = #{totalPrice},
		update_time = now()
		WHERE id = #{id}
	</update>

</mapper>